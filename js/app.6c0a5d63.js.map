{"version":3,"sources":["webpack:///./src/scripts/constants.js","webpack:///src/components/Sort/SortSetParameters.vue","webpack:///./src/components/Sort/SortSetParameters.vue?554b","webpack:///./src/components/Sort/SortSetParameters.vue","webpack:///./src/scripts/common.js","webpack:///./src/classes/Node.js","webpack:///src/components/Sort/SortTree.vue","webpack:///./src/components/Sort/SortTree.vue?1695","webpack:///./src/components/Sort/SortTree.vue","webpack:///src/components/Sort/SortComponent.vue","webpack:///./src/components/Sort/SortComponent.vue?4be3","webpack:///./src/components/Sort/SortComponent.vue","webpack:///src/App.vue","webpack:///./src/App.vue?df66","webpack:///./src/App.vue","webpack:///./src/main.js"],"names":["sortDirections","asc","desc","colors","base","positioning","sorting","sorted","SortSetParameters","newMax","max","newMin","min","newQuantity","swap","elementsQuantity","number","join","generatedElements","elements","_this","this","trim","splitter","splited","newSplittedElements","element","maxElementsQuantity","splittedElements","SortSetParameters_render","_vm","_h","$createElement","_c","_self","staticClass","_v","attrs","for","directives","name","rawName","value","expression","id","domProps","on","blur","setElements","input","$event","target","composing","parametersInput","elementsRange","type","elementsRangeLimits","$set","click","generateRandomElements","returnParameters","staticRenderFns","__vue_template_functional__","__vue_styles__","__vue_scopeId__","__vue_module_identifier__","Component","Object","component_normalizer","Sort_SortSetParameters","common_countDuplicates","array","reduce","accumulator","current","assign","defineProperty_default","common_createAnimation","createAnimation","tree","params","arguments","length","undefined","x","y","step","animations","activeNode","smallStep","minStep","downStep","backgroundColor","leftNode","rightNode","push","top","left","getValue","newAnimationsActive","concat","common_getTransforms","el","speedRate","transformParams","transforms","forEach","param","animationObject","targets","duration","delay","lastAnimation","common_getSortTransforms","lastState","Node_Node","Node","classCallCheck_default","translateX","translateY","animateSort","anime_min_default","scale","direction","easing","loop","autoplay","createClass_default","key","node","addNode","visit","visitNode","state","classes_Node","SortTree","Array","String","clearCurrentSort","keyValueEl","_this2","baseHeightAddition","transform","play","height","finished","_this3","_this4","build","sort","printNode","pause","SortTree_render","_l","class","active","style","background-color","_s","startSorting","__r","timeline","disabled","pauseSorting","resumeSorting","currentSortStep","sortSteps","done","ref","refInFor","sortedElements","sortedElement","_e","SortTree_staticRenderFns","SortTree___vue_template_functional__","SortTree___vue_styles__","SortTree___vue_scopeId__","SortTree___vue_module_identifier__","SortTree_Component","Sort_SortTree","SortComponent","SortComponent_render","set-parameters","setParameters","SortComponent_staticRenderFns","SortComponent___vue_template_functional__","SortComponent___vue_styles__","SortComponent___vue_scopeId__","SortComponent___vue_module_identifier__","SortComponent_Component","Sort_SortComponent","App","App_render","_m","App_staticRenderFns","href","injectStyle","context","__webpack_require__","App___vue_template_functional__","App___vue_styles__","App___vue_scopeId__","App___vue_module_identifier__","App_Component","src_App","vue_runtime_esm","config","productionTip","render","h","$mount"],"mappings":"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","file":"js/app.6c0a5d63.js","sourcesContent":["/***\r\n *\r\n * КОНСТАНТЫ\r\n *\r\n */\r\n\r\n/**\r\n * Направления сортировки\r\n */\r\nconst sortDirections = {\r\n    asc: 'ascending',\r\n    desc: 'descending'\r\n};\r\n\r\n/**\r\n * Цвета для состояний узлов\r\n */\r\nconst colors = {\r\n    base: '#FFA69E',\r\n    positioning: '#FF686B',\r\n    sorting: '#A5FFD6',\r\n    sorted: '#84DCC6'\r\n};\r\n\r\nexport {\r\n    sortDirections,\r\n    colors\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/constants.js","<!-- Компонент для выставления параметров сортировки -->\r\n\r\n<template>\r\n    <div class=\"sort-page_parameters\">\r\n        <div class=\"sort-parameters\">\r\n            <h3 class=\"sort-parameters_header\"> Ввести элементы вручную</h3>\r\n            <div class=\"sort-parameters_block\">\r\n                <div class=\"sort-parameters_group\">\r\n                    <label for=\"sortElements\">Список элементов</label>\r\n                    <textarea\r\n                            id=\"sortElements\"\r\n                            v-model=\"parametersInput\"\r\n                            @blur=\"setElements\"></textarea>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"sort-parameters sort-parameters--generate\">\r\n            <h3>Сгенерировать элементы случайным образом</h3>\r\n            <div class=\"sort-parameters_block\">\r\n                <div class=\"sort-parameters_group\">\r\n                    <label for=\"randomMin\"> Минимальное случайное значение </label>\r\n                    <input\r\n                            id=\"randomMin\"\r\n                            type=\"number\"\r\n                            :min=\"elementsRangeLimits.min\"\r\n                            :max=\"elementsRange.max\"\r\n                            v-model=\"elementsRange.min\">\r\n                </div>\r\n                <div class=\"sort-parameters_group\">\r\n                    <label for=\"randomMax\"> Максимальное случайное значение </label>\r\n                    <input\r\n                            id=\"randomMax\"\r\n                            type=\"number\"\r\n                            :min=\"elementsRange.min\"\r\n                            :max=\"elementsRangeLimits.max\"\r\n                            v-model=\"elementsRange.max\">\r\n                </div>\r\n                <div class=\"sort-parameters_group\">\r\n                    <label for=\"randomQuantity\"> Количество элементов </label>\r\n                    <input\r\n                            id=\"randomQuantity\"\r\n                            type=\"number\"\r\n                            :min=\"1\"\r\n                            :max=\"maxElementsQuantity\"\r\n                            v-model=\"elementsQuantity\">\r\n                </div>\r\n            </div>\r\n\r\n            <button\r\n                    class=\"btn btn--medium btn--generate\"\r\n                    type=\"button\"\r\n                    @click=\"generateRandomElements\">\r\n                Сгенерировать\r\n            </button>\r\n        </div>\r\n        <div class=\"sort-parameters sort-parameters--controls\">\r\n            <button\r\n                    class=\"btn btn--big btn--set\"\r\n                    type=\"button\"\r\n                    @click=\"returnParameters\">\r\n                Применить\r\n            </button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: 'sort-set-parameters',\r\n\r\n        data() {\r\n            return {\r\n                // максимальное количество элементов\r\n                maxElementsQuantity: 10,\r\n\r\n                // количество сортируемых элементов\r\n                elementsQuantity: 10,\r\n\r\n                // диапазон возможных значений случайных элементов\r\n                elementsRange: {\r\n                    min: 0,\r\n                    max: 100\r\n                },\r\n\r\n                // диапазон возможных значений элементов\r\n                elementsRangeLimits: {\r\n                    min: 0,\r\n                    max: 999\r\n                },\r\n\r\n                // сортируемые элменты\r\n                elements: [],\r\n\r\n                // пользовательский ввод\r\n                parametersInput: '',\r\n\r\n                // навравление сортировки (позже)\r\n                direction: ''\r\n            }\r\n        },\r\n\r\n        watch: {\r\n            'elementsRange.max'(value) {\r\n                if (typeof value !== 'number') {\r\n                    let newMax = parseInt(value, 10);\r\n\r\n                    if (!isNaN(newMax)) {\r\n                        this.elementsRange.max = newMax;\r\n                    } else {\r\n                        this.elementsRange.max = this.elementsRange.min + 1;\r\n                    }\r\n                }\r\n\r\n                if (this.elementsRange.max < this.elementsRangeLimits.min) {\r\n                    this.elementsRange.max = Math.abs(this.elementsRange.max);\r\n                }\r\n\r\n                if (this.elementsRange.max > this.elementsRangeLimits.max) {\r\n                    this.elementsRange.max = this.elementsRangeLimits.max;\r\n                }\r\n            },\r\n\r\n            'elementsRange.min'(value) {\r\n                if (typeof value !== 'number') {\r\n                    let newMin = parseInt(value, 10);\r\n\r\n                    if (!isNaN(newMin)) {\r\n                        this.elementsRange.min = newMin;\r\n                    } else {\r\n                        this.elementsRange.min = 0;\r\n                    }\r\n                }\r\n\r\n                if (this.elementsRange.min < this.elementsRangeLimits.min) {\r\n                    this.elementsRange.min = this.elementsRangeLimits.min;\r\n                }\r\n\r\n                if (this.elementsRange.min < this.elementsRangeLimits.max) {\r\n                    this.elementsRange.min = this.elementsRange.max;\r\n                }\r\n            },\r\n\r\n            elementsQuantity(value) {\r\n                if (typeof value !== 'number') {\r\n                    let newQuantity = parseInt(value, 10);\r\n\r\n                    if (!isNaN(newQuantity)) {\r\n                        this.elementsQuantity = newQuantity;\r\n                    }\r\n                }\r\n\r\n                if (this.elementsQuantity <= 0) {\r\n                    this.elementsQuantity = Math.abs(this.elementsQuantity) || 1;\r\n                }\r\n            }\r\n        },\r\n\r\n        methods: {\r\n            /**\r\n             * Функция генерирует elementsQuantity элементов\r\n             * в диапазоне от elementsRange.min\r\n             * до elementsRange.max\r\n             */\r\n            generateRandomElements() {\r\n                // проверка minMax\r\n                if (this.elementsRange.max < this.elementsRange.min) {\r\n                    let swap = this.elementsRange.max;\r\n                    this.elementsRange.max = this.elementsRange.min;\r\n                    this.elementsRange.min = swap;\r\n                }\r\n\r\n                let generatedElements = [],\r\n                    elementsToGenerate = this.elementsQuantity > this.maxElementsQuantity ? this.maxElementsQuantity : this.elementsQuantity,\r\n                    multiplier = this.elementsRange.max + 1 - this.elementsRange.min;\r\n\r\n                while (elementsToGenerate--) {\r\n                    let number = Math.floor(Math.random() * multiplier) + this.elementsRange.min;\r\n                    generatedElements.push(number);\r\n                }\r\n\r\n                this.parametersInput = generatedElements.join();\r\n\r\n                this.elements = generatedElements;\r\n            },\r\n\r\n            /**\r\n             * Функция азначает параметры сортировки\r\n             */\r\n            returnParameters() {\r\n                this.$emit('set-parameters', this.elements)\r\n            },\r\n\r\n            /**\r\n             * Функция устанавливает элементы для сортировки\r\n             */\r\n            setElements() {\r\n                let splitters = [',', '.', ';'],\r\n                    splittedElements = [ this.parametersInput.trim() ];\r\n\r\n                // выделяем элементы, очищая ввод от разделителей\r\n                splitters.forEach((splitter) => {\r\n                    let newSplittedElements = [];\r\n\r\n                    splittedElements.forEach((element) => {\r\n                        let splited = element.split(splitter);\r\n\r\n                        if (splited[splited.length - 1] === '') {\r\n                            splited = splited.splice(0, splited.length - 1)\r\n                        }\r\n                        newSplittedElements = newSplittedElements.concat(splited)\r\n                    });\r\n\r\n                    splittedElements = newSplittedElements;\r\n                });\r\n\r\n                // преобразуем элементы к числам\r\n                splittedElements = splittedElements.map((element) => {\r\n                    element = parseInt(element);\r\n\r\n                    if (isNaN(element)) {\r\n                        return this.elementsRangeLimits.min;\r\n                    }\r\n\r\n                    if (element > this.elementsRangeLimits.max) {\r\n                        return this.elementsRangeLimits.max;\r\n                    }\r\n\r\n                    return Math.abs(element)\r\n                });\r\n\r\n                if (splittedElements.length > this.maxElementsQuantity) {\r\n                    splittedElements = splittedElements.slice(0, this.maxElementsQuantity);\r\n                }\r\n\r\n                this.elements = splittedElements;\r\n            }\r\n        }\r\n    }\r\n</script>\n\n\n// WEBPACK FOOTER //\n// src/components/Sort/SortSetParameters.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"sort-page_parameters\"},[_c('div',{staticClass:\"sort-parameters\"},[_c('h3',{staticClass:\"sort-parameters_header\"},[_vm._v(\" Ввести элементы вручную\")]),_c('div',{staticClass:\"sort-parameters_block\"},[_c('div',{staticClass:\"sort-parameters_group\"},[_c('label',{attrs:{\"for\":\"sortElements\"}},[_vm._v(\"Список элементов\")]),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.parametersInput),expression:\"parametersInput\"}],attrs:{\"id\":\"sortElements\"},domProps:{\"value\":(_vm.parametersInput)},on:{\"blur\":_vm.setElements,\"input\":function($event){if($event.target.composing){ return; }_vm.parametersInput=$event.target.value}}})])])]),_c('div',{staticClass:\"sort-parameters sort-parameters--generate\"},[_c('h3',[_vm._v(\"Сгенерировать элементы случайным образом\")]),_c('div',{staticClass:\"sort-parameters_block\"},[_c('div',{staticClass:\"sort-parameters_group\"},[_c('label',{attrs:{\"for\":\"randomMin\"}},[_vm._v(\" Минимальное случайное значение \")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.elementsRange.min),expression:\"elementsRange.min\"}],attrs:{\"id\":\"randomMin\",\"type\":\"number\",\"min\":_vm.elementsRangeLimits.min,\"max\":_vm.elementsRange.max},domProps:{\"value\":(_vm.elementsRange.min)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.elementsRange, \"min\", $event.target.value)}}})]),_c('div',{staticClass:\"sort-parameters_group\"},[_c('label',{attrs:{\"for\":\"randomMax\"}},[_vm._v(\" Максимальное случайное значение \")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.elementsRange.max),expression:\"elementsRange.max\"}],attrs:{\"id\":\"randomMax\",\"type\":\"number\",\"min\":_vm.elementsRange.min,\"max\":_vm.elementsRangeLimits.max},domProps:{\"value\":(_vm.elementsRange.max)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.elementsRange, \"max\", $event.target.value)}}})]),_c('div',{staticClass:\"sort-parameters_group\"},[_c('label',{attrs:{\"for\":\"randomQuantity\"}},[_vm._v(\" Количество элементов \")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.elementsQuantity),expression:\"elementsQuantity\"}],attrs:{\"id\":\"randomQuantity\",\"type\":\"number\",\"min\":1,\"max\":_vm.maxElementsQuantity},domProps:{\"value\":(_vm.elementsQuantity)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.elementsQuantity=$event.target.value}}})])]),_c('button',{staticClass:\"btn btn--medium btn--generate\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.generateRandomElements}},[_vm._v(\"\\n            Сгенерировать\\n        \")])]),_c('div',{staticClass:\"sort-parameters sort-parameters--controls\"},[_c('button',{staticClass:\"btn btn--big btn--set\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.returnParameters}},[_vm._v(\"\\n            Применить\\n        \")])])])}\nvar staticRenderFns = []\nexport { render, staticRenderFns }\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-69babf84\",\"hasScoped\":false,\"optionsId\":\"0\",\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Sort/SortSetParameters.vue\n// module id = null\n// module chunks = ","/* script */\nexport * from \"!!cache-loader?{\\\"cacheDirectory\\\":\\\"E:\\\\\\\\work\\\\\\\\sortTest\\\\\\\\node_modules\\\\\\\\.cache\\\\\\\\cache-loader\\\"}!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./SortSetParameters.vue\"\nimport __vue_script__ from \"!!cache-loader?{\\\"cacheDirectory\\\":\\\"E:\\\\\\\\work\\\\\\\\sortTest\\\\\\\\node_modules\\\\\\\\.cache\\\\\\\\cache-loader\\\"}!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./SortSetParameters.vue\"\n/* template */\nimport {render as __vue_render__, staticRenderFns as __vue_static_render_fns__} from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-69babf84\\\",\\\"hasScoped\\\":false,\\\"optionsId\\\":\\\"0\\\",\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./SortSetParameters.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nimport normalizeComponent from \"!../../../node_modules/vue-loader/lib/runtime/component-normalizer\"\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_render__,\n  __vue_static_render_fns__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Sort/SortSetParameters.vue\n// module id = null\n// module chunks = ","/**\r\n *\r\n * ОБЩИЕ ФУНКЦИИ\r\n *\r\n */\r\n\r\nimport { colors } from './constants';\r\n\r\n/**\r\n * Функция подсчитывает количество дубликатов в массиве,\r\n * и возвращает их в виде [ {значение: количество элементов} ]\r\n *\r\n *  @param {Array} array - массив элементов\r\n *\r\n *  @returns {Object}\r\n */\r\nconst countDuplicates = array => array.reduce((accumulator, current) =>\r\n    Object.assign(accumulator, {[current]: (accumulator[current] || 0) + 1}), {});\r\n\r\n/**\r\n * Функция возвращает массив с анимациями\r\n *\r\n * @param {Number} value - эначение\r\n * @param {Node} tree - ветка дерева\r\n * @param {Object} [params] - параметры анимации\r\n *\r\n * @returns {Object[]}\r\n */\r\nconst createAnimation = (value, tree, params = { x: 500, y: 0, step: 200}) => {\r\n    let animations = [], // анимации\r\n        activeNode = null, // активная ветка анимаций\r\n        smallStep = 15, // шаг для сравнения\r\n        minStep = 50, // минимальный шаг сдвига в сторону\r\n        downStep = 50, // сдвиг вниз\r\n        backgroundColor = colors.positioning; // цвет активной ноды\r\n\r\n    // если нет ветки, нечего анимировать\r\n    if (!tree || (!tree.leftNode && !tree.rightNode)) {\r\n        return animations;\r\n    }\r\n\r\n    // анимация \"сравнения\"\r\n    animations.push({\r\n        backgroundColor,\r\n        top: params.y,\r\n        left: params.x + smallStep\r\n    });\r\n    animations.push({\r\n        backgroundColor,\r\n        top: params.y,\r\n        left: params.x - smallStep\r\n    });\r\n    animations.push({\r\n        backgroundColor,\r\n        top: params.y,\r\n        left: params.x\r\n    });\r\n\r\n    // рассчет сдвига вниз\r\n    params.y += downStep;\r\n\r\n    // рассчет сдвига в сторону\r\n    if (value < tree.getValue()) {\r\n        activeNode = tree.leftNode;\r\n        params.x -= params.step;\r\n    } else {\r\n        params.x += params.step;\r\n        activeNode = tree.rightNode;\r\n    }\r\n\r\n    // умешьшениешага для сдвига в сторону\r\n    if (params.step > minStep) {\r\n        params.step /= 2;\r\n    }\r\n\r\n    // окончательная анимация текущего шага% сдвиг вниз и в сторону\r\n    animations.push({\r\n        backgroundColor,\r\n        top: params.y,\r\n        left: params.x\r\n    });\r\n\r\n    // получение следующих анимаций\r\n    let newAnimationsActive = createAnimation(value, activeNode, params);\r\n\r\n    animations = animations.concat(newAnimationsActive);\r\n\r\n    return animations;\r\n};\r\n\r\n/**\r\n * Функция возвращает массив с трансформациями для animejs\r\n *\r\n * @param {Number} value - эначение\r\n * @param {Node} tree - ветка дерева\r\n * @param {HTMLElement} el - анимируеный элемент в DOM\r\n * @param {Number} speedRate - модификатор скорости\r\n *\r\n * @returns {Object[]}\r\n */\r\nconst getTransforms = (value, tree, el, speedRate = 1) => {\r\n    let transformParams = createAnimation(value, tree),\r\n        transforms = [];\r\n\r\n    transformParams.forEach(param => {\r\n        let animationObject = {\r\n            targets: el,\r\n            duration: 150 / speedRate,\r\n            delay: 0\r\n        };\r\n\r\n        if (!param) {\r\n            return;\r\n        }\r\n\r\n        // выставляем измение положения по оси x\r\n        if (param.left) {\r\n            animationObject.left = param.left;\r\n        }\r\n\r\n        // выставляем измение положения по оси y\r\n        if (param.top) {\r\n            animationObject.top = param.top;\r\n        }\r\n\r\n        // выставляем цвет\r\n        if (param.backgroundColor) {\r\n            animationObject.backgroundColor = param.backgroundColor;\r\n        }\r\n\r\n        if (animationObject.left || animationObject.top) {\r\n            transforms.push(animationObject)\r\n        }\r\n    });\r\n\r\n    // возвращение к базовому цвету\r\n    let lastAnimation = transforms[transforms.length - 1];\r\n\r\n    lastAnimation.backgroundColor = colors.base;\r\n    transforms.push(lastAnimation);\r\n\r\n    return transforms;\r\n};\r\n\r\n/**\r\n * Функция возвращает массив с трансформациями для animejs\r\n *\r\n * @param {HTMLElement} el - анимируеный элемент в DOM\r\n * @param {Object} lastState - последнее состояние узла\r\n * @param {Number} speedRate - модификатор скорости\r\n *\r\n * @returns {Object[]}\r\n */\r\nconst getSortTransforms = (el, lastState, speedRate = 1) => {\r\n    let transforms = [],\r\n        step = 2;\r\n\r\n    // анимации изменения цвета и дрожания\r\n    transforms.push({\r\n        targets: el,\r\n        duration: 50 / speedRate,\r\n        delay: 100,\r\n        backgroundColor: colors.sorting,\r\n        left: lastState.left - step,\r\n        top: lastState.top\r\n    });\r\n    transforms.push({\r\n        targets: el,\r\n        duration: 75 / speedRate,\r\n        delay: 100,\r\n        backgroundColor: colors.sorting,\r\n        left: lastState.left + step,\r\n        top: lastState.top\r\n    });\r\n    transforms.push({\r\n        targets: el,\r\n        duration: 50 / speedRate,\r\n        delay: 100,\r\n        backgroundColor: colors.sorting,\r\n        left: lastState.left - step,\r\n        top: lastState.top\r\n    });\r\n    transforms.push({\r\n        targets: el,\r\n        duration: 75 / speedRate,\r\n        delay: 100,\r\n        backgroundColor: colors.sorting,\r\n        left: lastState.left + step,\r\n        top: lastState.top\r\n    });\r\n\r\n    // окончание обработки\r\n    transforms.push({\r\n        targets: el,\r\n        duration: 100 / speedRate,\r\n        delay: 100,\r\n        backgroundColor: colors.sorted,\r\n        left: lastState.left,\r\n        top: lastState.top\r\n    });\r\n\r\n    return transforms;\r\n};\r\n\r\nexport {\r\n    countDuplicates,\r\n    createAnimation,\r\n    getTransforms,\r\n    getSortTransforms\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/common.js","import anime from 'animejs';\r\n\r\nconst Node =  class {\r\n    /**\r\n     * Создет объект узла дерева\r\n     *\r\n     * @param {Number} value - вес узла\r\n     * @param {HTMLElement} el - элемент\r\n     */\r\n    constructor(value, el) {\r\n        // вес узла\r\n        this.value = value;\r\n\r\n        // dom - узел\r\n        this.el = el;\r\n\r\n        // поледнее состояние элемента: позиция, цвет\r\n        this.lastState = {\r\n            translateX: 500,\r\n            translateY: 0\r\n        };\r\n\r\n        // анимации элемента\r\n        this.animations = [];\r\n\r\n        // левая ветка\r\n        this.leftNode = null;\r\n\r\n        // правая ветка\r\n        this.rightNode = null;\r\n\r\n        // анимация сортировки элемента в дереве\r\n        this.animateSort = anime({\r\n            targets: el,\r\n            scale: 1.5,\r\n            delay: 300,\r\n            direction: 'alternate',\r\n            easing: 'easeInOutSine',\r\n            loop: false,\r\n            autoplay: false\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Добавление дочернего узла\r\n     *\r\n     * @param {Node} node\r\n     */\r\n    addNode(node) {\r\n        if (node.getValue() < this.value) {\r\n            if (this.leftNode !== null) {\r\n                this.leftNode.addNode(node)\r\n            } else {\r\n                this.leftNode = node;\r\n                return this;\r\n            }\r\n        } else {\r\n            if (this.rightNode !== null) {\r\n                this.rightNode.addNode(node)\r\n            } else {\r\n                this.rightNode = node;\r\n                return this;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Получение значения узла\r\n     */\r\n    getValue() {\r\n        return this.value;\r\n    }\r\n\r\n    /**\r\n     * Обход узла\r\n     *\r\n     * @param {Function} visit - callback\r\n     */\r\n    visitNode(visit) {\r\n        if (this.leftNode !== null) {\r\n            this.leftNode.visitNode(visit)\r\n        }\r\n\r\n        visit(this.value, this.el, this.lastState);\r\n\r\n        if (this.rightNode !== null) {\r\n            this.rightNode.visitNode(visit)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Установка состояния узла\r\n     *\r\n     * @param {Object} state\r\n     */\r\n    setLastState(state) {\r\n        this.lastState = state;\r\n    }\r\n};\r\n\r\nexport default Node;\n\n\n// WEBPACK FOOTER //\n// ./src/classes/Node.js","<template>\r\n    <div class=\"sort-block\">\r\n        <div class=\"sort-block_list\">\r\n            <h3 class=\"sort-block_header\">Исходные элементы:</h3>\r\n            <ul class=\"sort-block_elements\">\r\n                <li v-for=\"element in initialElements\"\r\n                    :key=\"element.key\"\r\n                    :class=\"{ 'active': activeNode !== false && (activeNode  === element.key) }\"\r\n                    :style=\"{ 'background-color': colors.base }\">{{element.value}}</li>\r\n            </ul>\r\n            <button class=\"btn btn--medium btn--sort\"\r\n                    type=\"button\"\r\n                    @click=\"startSorting\">\r\n                Начать сортировку\r\n            </button>\r\n            <div class=\"sort-parameters_group sort-parameters_group--speed\">\r\n                <label for=\"speedRate\">Скорость сортировки</label>\r\n                <input id=\"speedRate\"\r\n                       type=\"range\"\r\n                       min=\"0.1\"\r\n                       max=\"2\"\r\n                       step=\"0.1\"\r\n                       v-model=\"speedRate\">\r\n            </div>\r\n            <div v-show=\"this.timeline !== null\"\r\n                 class=\"sort-block_controls\">\r\n                <button class=\"btn btn--small btn--pause\"\r\n                        type=\"button\"\r\n                        :disabled=\"this.timeline === null\"\r\n                        @click=\"pauseSorting\">\r\n                    &#10073;&#10073;\r\n                </button>\r\n                <button class=\"btn btn--small btn--resume\"\r\n                        type=\"button\"\r\n                        :disabled=\"this.timeline === null\"\r\n                        @click=\"resumeSorting\">\r\n                    &#x25BA;\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n        <div v-show=\"currentSortStep\" class=\"sort-block_steps\">\r\n            <h3 class=\"sort-block_header\"> Шаг сортировки:</h3>\r\n            <ol>\r\n                <li :class=\"{ 'active': currentSortStep === sortSteps.build,\r\n                              'done': ( currentSortStep === sortSteps.finished || currentSortStep === sortSteps.sort ) }\">Построение бинарного дерева</li>\r\n                <li :class=\"{ 'active': currentSortStep === sortSteps.sort,\r\n                              'done': ( currentSortStep === sortSteps.finished ) }\">Обход дерева</li>\r\n            </ol>\r\n        </div>\r\n\r\n        <div v-show=\"tree\"\r\n             class=\"sort-block_list\">\r\n            <h3 class=\"sort-block_header\">Построенное дерево:</h3>\r\n            <ul class=\"tree\"\r\n                :style=\"{ 'height': `${height}px` }\">\r\n                <li v-for=\"node in nodeElements\"\r\n                    :ref=\"node.key\"\r\n                    :style=\"{ 'background-color': colors.base }\">\r\n                        {{node.value}}\r\n                        <span class=\"tree-line\"></span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n        <div v-if=\"sortedElements.length\"\r\n             class=\"sort-block_list\">\r\n            <h3 class=\"sort-block_header\">Отсортированные элементы:</h3>\r\n            <ul class=\"sort-block_elements\">\r\n                <li v-for=\"sortedElement in sortedElements\"\r\n                    :style=\"{ 'background-color': colors.sorted }\"> {{sortedElement}} </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import {\r\n        sortDirections,\r\n        colors\r\n    } from '../../scripts/constants';\r\n    import {\r\n        countDuplicates,\r\n        getTransforms,\r\n        getSortTransforms\r\n    } from '../../scripts/common';\r\n\r\n    import Node from '../../classes/Node';\r\n\r\n    import anime from 'animejs';\r\n\r\n    export default {\r\n        name: 'sort-tree',\r\n\r\n        props: {\r\n            // элементы для сортировки\r\n            elements: {\r\n                type: Array,\r\n                required: true,\r\n                default: () => {\r\n                    return []\r\n                }\r\n            },\r\n\r\n            // направление сортировки\r\n            direction: {\r\n                type: String,\r\n                required: true,\r\n                default: sortDirections.asc\r\n            }\r\n        },\r\n\r\n        data() {\r\n            return {\r\n                // дерево сортировки\r\n                tree: null,\r\n\r\n                // обрабтываемый лист дерева\r\n                activeNode: false,\r\n\r\n                // листы дерева для отображения исходного состояния массива\r\n                initialElements: [],\r\n\r\n                // листы дерева для анимирования\r\n                nodeElements: [],\r\n\r\n                // массив с отсортированными элементами\r\n                sortedElements: [],\r\n\r\n                // текущая анимация\r\n                timeline: null,\r\n\r\n                // цвета для элементов\r\n                colors: colors,\r\n\r\n                // высота блока с деревом\r\n                height: 0,\r\n\r\n                // шаги сортировки\r\n                sortSteps: {\r\n                    build: 'build',\r\n                    sort: 'sort',\r\n                    finished: 'finished'\r\n                },\r\n\r\n                // текущий шаг сортировки\r\n                currentSortStep: '',\r\n\r\n                // скорость сортировки\r\n                speedRate: 1\r\n            }\r\n        },\r\n\r\n        watch: {\r\n            elements: {\r\n                handler() {\r\n                    let arrayCounter = countDuplicates(this.elements);\r\n\r\n                    this.clearCurrentSort();\r\n                    this.currentSortStep = '';\r\n\r\n                    // вычисление дубликатов\r\n                    this.elements.forEach((el) => {\r\n                        let keyValueEl;\r\n\r\n                        if (arrayCounter[el] > 1) {\r\n                            arrayCounter[el]--;\r\n                            keyValueEl = {\r\n                                value: el,\r\n                                key: `${el}dupl${arrayCounter[el]}`\r\n                            };\r\n                        } else {\r\n                            keyValueEl = {\r\n                                value: el,\r\n                                key: `${el}`\r\n                            };\r\n                        }\r\n\r\n                        this.initialElements.push(keyValueEl);\r\n                        this.nodeElements.push(keyValueEl);\r\n                    });\r\n                },\r\n                deep: true\r\n            },\r\n\r\n            speedRate() {\r\n                if (typeof this.speedRate !== 'number') {\r\n                    this.speedRate = parseFloat(this.speedRate);\r\n                }\r\n            }\r\n        },\r\n\r\n        methods: {\r\n            /**\r\n             * Создание бинарного дерева\r\n             *\r\n             * @returns {Promise}\r\n             */\r\n            createTree() {\r\n                let baseHeightAddition = 10,\r\n                    height = baseHeightAddition;\r\n\r\n                this.timeline = anime.timeline({\r\n                    autoplay: false\r\n                });\r\n\r\n                // создание листа дерева и анимация нахождения его позиции\r\n                this.initialElements.forEach((el) => {\r\n                    let node = new Node(el.value, this.$refs[el.key]);\r\n\r\n                    // добавление начальных значений анимации\r\n                    this.timeline.add({\r\n                        targets: this.$refs[el.key],\r\n                        opacity: {\r\n                            value: 1,\r\n                            duration: 100 / this.speedRate,\r\n                            delay: 0\r\n                        },\r\n                        backgroundColor: {\r\n                            value: colors.base,\r\n                            easing: 'easeInOutSine',\r\n                            duration: 100 / this.speedRate,\r\n                            delay: 0\r\n                        }\r\n                    });\r\n\r\n                    if (!this.tree) {\r\n                        // обработка корневого элемента дерева\r\n                        this.tree = node;\r\n\r\n                        // появление корневого элемента дерева\r\n                        this.timeline.add({\r\n                            targets: this.$refs[el.key],\r\n                            duration: 100 / this.speedRate,\r\n                            left: 500\r\n                        });\r\n\r\n                        node.setLastState({\r\n                            left: 500\r\n                        });\r\n                    } else {\r\n                        this.tree.addNode(node);\r\n\r\n                        // настраиваем анимацию\r\n                        let transforms = getTransforms(node.getValue(), this.tree, this.$refs[el.key], this.speedRate),\r\n                            lastState = null;\r\n\r\n                        transforms.forEach( transform => {\r\n                            this.timeline.add(transform);\r\n                            lastState = transform;\r\n                        });\r\n\r\n                        baseHeightAddition += 10;\r\n                        height = lastState.top + baseHeightAddition;\r\n\r\n                        node.setLastState(lastState);\r\n                    }\r\n                });\r\n\r\n                this.timeline.play();\r\n\r\n                this.height = height;\r\n\r\n                return this.timeline.finished;\r\n            },\r\n\r\n            /**\r\n             * Вывод листа дерева\r\n             *\r\n             * @param {String} value - выводимый лист\r\n             * @param {HTMLElement} el - узел dom\r\n             * @param {Object} lastState - последнее состояние узла\r\n             */\r\n            printNode(value, el, lastState) {\r\n                let transforms = getSortTransforms(el, lastState, this.speedRate);\r\n\r\n                // добаление анимаций в таймлайн\r\n                transforms.forEach(transform => {\r\n                    this.timeline.add(transform)\r\n                });\r\n\r\n                this.sortedElements.push(value);\r\n            },\r\n\r\n            /**\r\n             * Старт сортировки\r\n             */\r\n            startSorting() {\r\n                this.tree = null;\r\n                this.sortedElements = [];\r\n\r\n                // сокрытие элементов\r\n                this.initialElements.forEach((el) => {\r\n                    if (this.$refs[el.key]) {\r\n                        this.$refs[el.key][0].style.opacity = 0;\r\n                        this.$refs[el.key][0].style.top = 0;\r\n                        this.$refs[el.key][0].style.left = 0;\r\n                    }\r\n                });\r\n\r\n                this.currentSortStep = this.sortSteps.build;\r\n                // обход дерева, после его создания\r\n                this.createTree().then(() => {\r\n                    this.activeNode = false;\r\n                    if (this.tree) {\r\n                        this.currentSortStep = this.sortSteps.sort;\r\n                        this.timeline = anime.timeline({\r\n                            autoplay: false\r\n                        });\r\n\r\n                        this.tree.visitNode(this.printNode);\r\n\r\n                        this.timeline.play();\r\n                        this.timeline.finished.then(() => {\r\n                            this.currentSortStep = this.sortSteps.finished;\r\n                            this.timeline = null;\r\n                        })\r\n                    }\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Очищение текущей сортировки\r\n             */\r\n            clearCurrentSort() {\r\n                this.tree = null;\r\n                this.activeNode = false;\r\n                this.timeline = null;\r\n                this.initialElements = [];\r\n                this.nodeElements = [];\r\n                this.sortedElements = [];\r\n                this.currentSortStep = '';\r\n            },\r\n\r\n            /**\r\n             * Функция приостанавливавет сортировку\r\n             */\r\n            pauseSorting() {\r\n                if (this.timeline) {\r\n                    this.timeline.pause();\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Функция запускает продолжение сортировки\r\n             */\r\n            resumeSorting() {\r\n                if (this.timeline) {\r\n                    this.timeline.play();\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\n\n\n// WEBPACK FOOTER //\n// src/components/Sort/SortTree.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"sort-block\"},[_c('div',{staticClass:\"sort-block_list\"},[_c('h3',{staticClass:\"sort-block_header\"},[_vm._v(\"Исходные элементы:\")]),_c('ul',{staticClass:\"sort-block_elements\"},_vm._l((_vm.initialElements),function(element){return _c('li',{key:element.key,class:{ 'active': _vm.activeNode !== false && (_vm.activeNode  === element.key) },style:({ 'background-color': _vm.colors.base })},[_vm._v(_vm._s(element.value))])})),_c('button',{staticClass:\"btn btn--medium btn--sort\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.startSorting}},[_vm._v(\"\\n            Начать сортировку\\n        \")]),_c('div',{staticClass:\"sort-parameters_group sort-parameters_group--speed\"},[_c('label',{attrs:{\"for\":\"speedRate\"}},[_vm._v(\"Скорость сортировки\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.speedRate),expression:\"speedRate\"}],attrs:{\"id\":\"speedRate\",\"type\":\"range\",\"min\":\"0.1\",\"max\":\"2\",\"step\":\"0.1\"},domProps:{\"value\":(_vm.speedRate)},on:{\"__r\":function($event){_vm.speedRate=$event.target.value}}})]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.timeline !== null),expression:\"this.timeline !== null\"}],staticClass:\"sort-block_controls\"},[_c('button',{staticClass:\"btn btn--small btn--pause\",attrs:{\"type\":\"button\",\"disabled\":this.timeline === null},on:{\"click\":_vm.pauseSorting}},[_vm._v(\"\\n                ❙❙\\n            \")]),_c('button',{staticClass:\"btn btn--small btn--resume\",attrs:{\"type\":\"button\",\"disabled\":this.timeline === null},on:{\"click\":_vm.resumeSorting}},[_vm._v(\"\\n                ►\\n            \")])])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.currentSortStep),expression:\"currentSortStep\"}],staticClass:\"sort-block_steps\"},[_c('h3',{staticClass:\"sort-block_header\"},[_vm._v(\" Шаг сортировки:\")]),_c('ol',[_c('li',{class:{ 'active': _vm.currentSortStep === _vm.sortSteps.build,\n                          'done': ( _vm.currentSortStep === _vm.sortSteps.finished || _vm.currentSortStep === _vm.sortSteps.sort ) }},[_vm._v(\"Построение бинарного дерева\")]),_c('li',{class:{ 'active': _vm.currentSortStep === _vm.sortSteps.sort,\n                          'done': ( _vm.currentSortStep === _vm.sortSteps.finished ) }},[_vm._v(\"Обход дерева\")])])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.tree),expression:\"tree\"}],staticClass:\"sort-block_list\"},[_c('h3',{staticClass:\"sort-block_header\"},[_vm._v(\"Построенное дерево:\")]),_c('ul',{staticClass:\"tree\",style:({ 'height': (_vm.height + \"px\") })},_vm._l((_vm.nodeElements),function(node){return _c('li',{ref:node.key,refInFor:true,style:({ 'background-color': _vm.colors.base })},[_vm._v(\"\\n                    \"+_vm._s(node.value)+\"\\n                    \"),_c('span',{staticClass:\"tree-line\"})])}))]),(_vm.sortedElements.length)?_c('div',{staticClass:\"sort-block_list\"},[_c('h3',{staticClass:\"sort-block_header\"},[_vm._v(\"Отсортированные элементы:\")]),_c('ul',{staticClass:\"sort-block_elements\"},_vm._l((_vm.sortedElements),function(sortedElement){return _c('li',{style:({ 'background-color': _vm.colors.sorted })},[_vm._v(\" \"+_vm._s(sortedElement)+\" \")])}))]):_vm._e()])}\nvar staticRenderFns = []\nexport { render, staticRenderFns }\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-045b0cc0\",\"hasScoped\":false,\"optionsId\":\"0\",\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Sort/SortTree.vue\n// module id = null\n// module chunks = ","/* script */\nexport * from \"!!cache-loader?{\\\"cacheDirectory\\\":\\\"E:\\\\\\\\work\\\\\\\\sortTest\\\\\\\\node_modules\\\\\\\\.cache\\\\\\\\cache-loader\\\"}!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./SortTree.vue\"\nimport __vue_script__ from \"!!cache-loader?{\\\"cacheDirectory\\\":\\\"E:\\\\\\\\work\\\\\\\\sortTest\\\\\\\\node_modules\\\\\\\\.cache\\\\\\\\cache-loader\\\"}!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./SortTree.vue\"\n/* template */\nimport {render as __vue_render__, staticRenderFns as __vue_static_render_fns__} from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-045b0cc0\\\",\\\"hasScoped\\\":false,\\\"optionsId\\\":\\\"0\\\",\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./SortTree.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nimport normalizeComponent from \"!../../../node_modules/vue-loader/lib/runtime/component-normalizer\"\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_render__,\n  __vue_static_render_fns__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Sort/SortTree.vue\n// module id = null\n// module chunks = ","<!-- Компонент для сортировки -->\r\n\r\n<template>\r\n    <section>\r\n        <sort-tree v-show=\"elements.length\"\r\n                   :elements=\"elements\"\r\n                   :direction=\"direction\">\r\n        </sort-tree>\r\n        <sort-set-parameters @set-parameters=\"setParameters\"></sort-set-parameters>\r\n    </section>\r\n</template>\r\n\r\n<script>\r\n    import { sortDirections } from '../../scripts/constants';\r\n\r\n    import SortSetParameters from './SortSetParameters.vue';\r\n    import SortTree from './SortTree.vue';\r\n\r\n    export default {\r\n        name: 'sort-component',\r\n\r\n        components: {\r\n            SortSetParameters,\r\n            SortTree\r\n        },\r\n\r\n        data() {\r\n            return {\r\n                elements: [],\r\n\r\n                direction: sortDirections.asc\r\n            }\r\n        },\r\n\r\n        methods: {\r\n            /**\r\n             * Функция устанавливает параметры сортировки\r\n             */\r\n            setParameters(elements, direction = sortDirections.asc) {\r\n                this.elements = elements;\r\n\r\n                this.direction = direction;\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Sort/SortComponent.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('sort-tree',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.elements.length),expression:\"elements.length\"}],attrs:{\"elements\":_vm.elements,\"direction\":_vm.direction}}),_c('sort-set-parameters',{on:{\"set-parameters\":_vm.setParameters}})],1)}\nvar staticRenderFns = []\nexport { render, staticRenderFns }\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-5b168fcd\",\"hasScoped\":false,\"optionsId\":\"0\",\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Sort/SortComponent.vue\n// module id = null\n// module chunks = ","/* script */\nexport * from \"!!cache-loader?{\\\"cacheDirectory\\\":\\\"E:\\\\\\\\work\\\\\\\\sortTest\\\\\\\\node_modules\\\\\\\\.cache\\\\\\\\cache-loader\\\"}!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./SortComponent.vue\"\nimport __vue_script__ from \"!!cache-loader?{\\\"cacheDirectory\\\":\\\"E:\\\\\\\\work\\\\\\\\sortTest\\\\\\\\node_modules\\\\\\\\.cache\\\\\\\\cache-loader\\\"}!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./SortComponent.vue\"\n/* template */\nimport {render as __vue_render__, staticRenderFns as __vue_static_render_fns__} from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5b168fcd\\\",\\\"hasScoped\\\":false,\\\"optionsId\\\":\\\"0\\\",\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./SortComponent.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nimport normalizeComponent from \"!../../../node_modules/vue-loader/lib/runtime/component-normalizer\"\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_render__,\n  __vue_static_render_fns__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Sort/SortComponent.vue\n// module id = null\n// module chunks = ","<template>\n    <div id=\"app\" class=\"sort-page\">\n        <header class=\"sort-page_header\">\n            <h1>Сортировка с помощью дерева</h1>\n        </header>\n        <section class=\"sort-page_description\">\n            <p>На данной странице можно наглядно увидеть сортировку при помощи бинарного дерева:\n             построение дерева и его обход.</p>\n            <p> Для запуска сртировки необходимо: </p>\n            <ol>\n                <li>\n                    Создать массив для сортировки: ввести значение в текстовое поле \"Список элементов\" или сгенерировать массив.\n                </li>\n                <li>Для создания массива вручную качестве разделителей можно использовать ',', '.', и ';'. Например:  '1 4, 3. 6; 0'.</li>\n                <li>Для генерации массива нужно задать минимальное(от 0) и максимальное(до 999) значения в соответствующих полях, затем ввести количество\n                     сортируемых элементов (до 10) и нажать \"Сгенерировать\".- элементы появятся в текстовом поле \"Список элементов\".</li>\n                <li>После создания списка сортируемых элементов необходимо нажать \"Применть\". Появится блок для управления сортировкой.</li>\n                <li>\n                    Для начала сортировки нажмите на кноку \"Начать сортировку\", для паузы сортировки, нажмте на кнопку с символом \"&#10073;&#10073;\", для ее\n                    продолжения - на кнопку с символом \"&#x25BA;\".\n                </li>\n            </ol>\n        </section>\n        <sort-component></sort-component>\n        <footer class=\"sort-page_footer\">\n            <a class=\"link\" href=\"https://github.com/Nadiyka/Nadiyka.github.io\" target=\"_blank\">GitHub репозиторий</a>\n            <a class=\"link link--info\" href=\"https://vuejs.org/\" target=\"_blank\">&#x2692;&amp;&#x2620;</a>\n        </footer>\n    </div>\n</template>\n\n<script>\n    import SortComponent from './components/Sort/SortComponent.vue'\n\n    export default {\n        name: 'app',\n        components: {\n            SortComponent\n        }\n    }\n</script>\n\n<style></style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"sort-page\",attrs:{\"id\":\"app\"}},[_vm._m(0),_vm._m(1),_c('sort-component'),_vm._m(2)],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('header',{staticClass:\"sort-page_header\"},[_c('h1',[_vm._v(\"Сортировка с помощью дерева\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"sort-page_description\"},[_c('p',[_vm._v(\"На данной странице можно наглядно увидеть сортировку при помощи бинарного дерева:\\n         построение дерева и его обход.\")]),_c('p',[_vm._v(\" Для запуска сртировки необходимо: \")]),_c('ol',[_c('li',[_vm._v(\"\\n                Создать массив для сортировки: ввести значение в текстовое поле \\\"Список элементов\\\" или сгенерировать массив.\\n            \")]),_c('li',[_vm._v(\"Для создания массива вручную качестве разделителей можно использовать ',', '.', и ';'. Например:  '1 4, 3. 6; 0'.\")]),_c('li',[_vm._v(\"Для генерации массива нужно задать минимальное(от 0) и максимальное(до 999) значения в соответствующих полях, затем ввести количество\\n                 сортируемых элементов (до 10) и нажать \\\"Сгенерировать\\\".- элементы появятся в текстовом поле \\\"Список элементов\\\".\")]),_c('li',[_vm._v(\"После создания списка сортируемых элементов необходимо нажать \\\"Применть\\\". Появится блок для управления сортировкой.\")]),_c('li',[_vm._v(\"\\n                Для начала сортировки нажмите на кноку \\\"Начать сортировку\\\", для паузы сортировки, нажмте на кнопку с символом \\\"❙❙\\\", для ее\\n                продолжения - на кнопку с символом \\\"►\\\".\\n            \")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('footer',{staticClass:\"sort-page_footer\"},[_c('a',{staticClass:\"link\",attrs:{\"href\":\"https://github.com/Nadiyka/Nadiyka.github.io\",\"target\":\"_blank\"}},[_vm._v(\"GitHub репозиторий\")]),_c('a',{staticClass:\"link link--info\",attrs:{\"href\":\"https://vuejs.org/\",\"target\":\"_blank\"}},[_vm._v(\"⚒&☠\")])])}]\nexport { render, staticRenderFns }\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-d434780e\",\"hasScoped\":false,\"optionsId\":\"0\",\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (context) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":false,\\\"minimize\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"optionsId\\\":\\\"0\\\",\\\"vue\\\":true,\\\"scoped\\\":false,\\\"sourceMap\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\n/* script */\nexport * from \"!!cache-loader?{\\\"cacheDirectory\\\":\\\"E:\\\\\\\\work\\\\\\\\sortTest\\\\\\\\node_modules\\\\\\\\.cache\\\\\\\\cache-loader\\\"}!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!cache-loader?{\\\"cacheDirectory\\\":\\\"E:\\\\\\\\work\\\\\\\\sortTest\\\\\\\\node_modules\\\\\\\\.cache\\\\\\\\cache-loader\\\"}!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport {render as __vue_render__, staticRenderFns as __vue_static_render_fns__} from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-d434780e\\\",\\\"hasScoped\\\":false,\\\"optionsId\\\":\\\"0\\\",\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nimport normalizeComponent from \"!../node_modules/vue-loader/lib/runtime/component-normalizer\"\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_render__,\n  __vue_static_render_fns__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","import \"babel-polyfill\";\nimport Vue from 'vue';\nimport App from './App.vue';\n\nimport 'normalize.css';\nimport './styles/common.css';\n\nVue.config.productionTip = false;\n\nnew Vue({\n    render: h => h(App)\n}).$mount('#app');\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}